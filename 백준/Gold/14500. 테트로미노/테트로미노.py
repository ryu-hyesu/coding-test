import sys

N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]

# 가능한 모든 패턴의 회전/대칭 좌표를 저장한다.
tet = [[(0, 1), (0, 2), (0,3)], [(1, 0), (2, 0), (3, 0)], # | (회전)
    [(0, 1), (1, 0), (1, 1)], #ㅁ
    [(1, 0), (2, 0), (2, 1)], [(0, 1), (0, 2), (1, 0)], [(0, 1),(1, 1), (2, 1)], [(0, 1), (0, 2), (-1, 2)], # ㄴ (회전)
    [(0, 1), (-1, 1), (-2, 1)], [(1, 0), (1, 1), (1, 2)], [(0, 1), (1, 0), (2, 0)], [(0, 1), (0, 2), (1, 2)], # ㄴ대칭 (회전)
    [(1, 0), (1, 1), (2, 1)], [(0, 1), (-1, 1), (-1, 2)], # ㄹ(회전)
    [(1, 0), (0, 1), (-1, 1)], [(0, 1), (1, 1), (1, 2)], # ㄹ대칭 (회전)
    [(0, 1), (0, 2), (1, 1)], [(-1, 1), (0, 1), (1, 1)], [(0, 1), (0, 2), (-1, 1)], [(1, 0), (2, 0), (1, 1)]] # ㅏ (회전)

def cal(i, j, pos) :
    sm = arr[i][j] # 기준값을 저장, 나머지는 범위 내면 의미 있음
    for di, dj in pos :
        ni, nj = i + di, j + dj
        if 0 <= ni < N and 0 <= nj < M : # 범위 내
            sm += arr[ni][nj]
        else :
            return 0
    return sm

ans = 0

for i in range(N) :
    for j in range(M) :
        for pos in tet :
            sm = cal(i, j, pos)
            ans = max(ans, sm)

print(ans)